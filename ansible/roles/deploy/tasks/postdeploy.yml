---

- name: Load variables for deploy
  include_vars: deploy_vars.yml
  when: CI_JOB_STAGE != 'review'

- name: Load variables for review
  include_vars: review_vars.yml
  when: CI_JOB_STAGE == 'review'

- name: Clean old deployments
  shell: "ls -t | tail -n +{{ BUILDS_TO_KEEP }} | xargs rm -rfv"
  args:
    chdir: "{{ RELEASES_FOLDER }}"
  register: clean_old_status
  changed_when: False
  become: yes

- name: Template shared_folders script to remote
  template:
    src: shared_folders.sh
    dest: "{{ APP_DEPLOY_FOLDER }}/shared_folders.sh"
    owner: deployer
    group: deployer
    mode: '0700'

- name: Template clonedb script to remote
  template:
    src: clonedb.sh
    dest: "{{ APP_DEPLOY_FOLDER }}/clonedb.sh"
    owner: deployer
    group: deployer
    mode: '0700'
  when: CI_JOB_STAGE == 'review'

- name: Template initmongo script to remote
  template:
    src: initmongo.sh
    dest: "{{ APP_DEPLOY_FOLDER }}/initmongo.sh"
    owner: deployer
    group: deployer
    mode: '0700'
  when: CI_JOB_STAGE == 'review'

- name: Run shared_folders script
  command: "{{ APP_DEPLOY_FOLDER }}/shared_folders.sh"
  register: shared_folders_output

- name: Scripts output output
  debug:
    msg: "{{ shared_folders_output.stdout_lines }}"

- name: Restart worker on PM2
  shell: "source /home/deployer/.nvm/nvm.sh && nvm use {{ NODE_VERSION }} && pm2 restart all"
  args:
    executable: /bin/bash
  ignore_errors: yes
  
- name: Check if .env file exists
  stat:
    path: "{{ APP_DEPLOY_FOLDER }}/.env"
  register: env_file

- name: Check .env file permissions
  file:
    path: "{{ APP_DEPLOY_FOLDER }}/.env"
    owner: deployer
    group: deployer
    mode: '0640'
  when: env_file.stat.exists
